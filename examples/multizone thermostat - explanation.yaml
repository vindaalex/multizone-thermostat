# MASTER, this synchronizes and coordinates the satellites valve opening
- platform: multizone_thermostat
  name: master # used name is overruled to master to assure satellites can find it
  unique_id: mz_master
  initial_hvac_mode: "off" # or heat | cool
  initial_preset_mode: "none" # or one from 'custom_presets'
  room_area: 142 # sum of all areas
  passive_switch_check: True # defines for daily check at 2:00 AM
  precision: 0.5 # stepsize of set point
  
  # show detail control output (use only for config 
  # or debug to avoid log size issues)
  detailed_output: True 

  # configuration for heating mode
  heat:
    # a main valve (for instance honeywell 2-way valve)
    # or relay to gas heater
    entity_id: switch.main_valve

    # check if valve is set to open within specified days. 
    # if not switch operated within specified duration it will be opened for 1 minute.
    # only operated when master is not heating or cooling. duration can be 
    # set via 'passive_switch_opening_time'    
    passive_switch_duration:
      days: 60
    passive_switch_opening_time:
      minutes: 4
    
    # user defined presets. each mode needs to be defined per satellite. 
    # temperatures may differ per thermostat.
    # temperatures defined at master are ignored.
    custom_presets:
      night: 15
      holiday: 5

    # configuration required for master
    master_mode:

      # list of satellites to control
      satelites: [living, sl1]
      
      # nesting routine.
      # "continuous": tries to create a continuous master valve opening when sufficient heat is required
      # "minimal_on": opens the master valve as short as possible
      # "balanced": schedules satellites such that a continuous minumum heat requirement is achieved, 
      #    then increases pwm duration. When continuous master valve opening is possible control_val = pwm_scale
      #    it then start to open satellites at teh same time whereby heating power rises. Scheduling of satellites 
      #    is such that in time heating power is balanced.
      operation_mode: "balanced"

      # minimum percentage of master room size of rooms with open valves. 
      # used for nesting (scheduling of opening and closing of satellites)
      lower_load_scale: 0.2

      # time interval where pwm control output is calculated
      # advised to set for master equal to 'pwm_duration'
      control_interval:
        minutes: 30
      
      # cycle interval for pwm. within this example the valve is openened a certain time each 30 minutes
      pwm_duration:
        minutes: 30

      # scale wherein pwm operates. Thus here is operates between 0-100 wher 0 is 
      # valve closed and 100 valve open the whole pwm cycle
      pwm_scale: 100

      # number of steps in pwm scale. a resolution of 50 and pwm scale 100 results in stepsize 2
      pwm_resolution: 50
      
      # only open valve when pwm requirement is above threshold
      pwm_threshold: 2

      # percentage of pwm_scale to open whne a proportional valve requires heat.
      # avoids for proportional valves too short opening of master valve
      min_opening_for_propvalve: 0.15

      # experimental, not advised to use 
      # try to achieve for the proportional valves a 
      # max opening to 80% of max
      PID_valve_mode:
        goal: .8
        kp: -0.5
        ki: -0.0003
        kd: 0

  restore_from_old_state: True # restore changes made via service calls
  restore_parameters: False # yaml config is overrulled by services modified settings 
  restore_integral: True # PID integral restored to continue with previous pid setpoint

- platform: multizone_thermostat
  name: living
  unique_id: mz_living
  sensor: sensor.temp_wk

  # in case of sensors with irregular updates or inaccurate sensors (for instance sensors with a battery) the filter wll 
  # average and smoothen the output. this improves the derative term for the pid controller
  # advised to start with filter_mode 1
  filter_mode: 1

  # entity with outdoor temperature. used by weather compensation controller
  sensor_out: sensor.openweather_temperature
  room_area: 62 # floor area of room, size is indication how much heat loss is present
  initial_hvac_mode: "off"
  precision: 0.1
  sensor_stale_duration:
    hours: 12
  passive_switch_check: True
  
  # configuration for heating mode
  heat:
    
    # thermostatic actuator
    # switch/valve to open. 'pwm_duration' is not 0 thus switch is on-off
    entity_id: input_boolean.living
    
    # specify valve is by default closed
    switch_mode: "NC"

    passive_switch_duration: 
      days: 60
    passive_switch_opening_time:
      minutes: 4
    
    # setpoint limits
    min_target_temp: 15
    max_target_temp: 25
    initial_target_temp: 19 # initial setpoint, overruled by 'restore_parameters: True'
    
    custom_presets: # user defined presets.
      night: 15
      holiday: 5    
    
    # controller definition required for satellite
    proportional_mode:
      # time duration. pwm_duration should be divideable by control_interval
      control_interval:
        minutes: 15
      
      # for an on-off switch the cycle time should be equal to master pwm_duration
      pwm_duration:
        minutes: 30
      pwm_scale: 100
      pwm_resolution: 50
      
      # only open valve when pwm requirement is above threshold
      pwm_threshold: 2

      # pid controller config (optional)
      PID_mode:
        kp: 50
        ki: 0.004
        kd: -150000

        # optional bandwidth wherein the pid output can operate
        # experimental, advised not to use
        pwm_scale_low: -20
        pwm_scale_high: 80

        # check for sudden temperature drop, for instance by open window
        # -3.6 degrees celcius per hour is good start point
        window_open_tempdrop: -3.6

      # weather compensation controller (optional)
      weather_mode:
        ka: 2
        kb: -15

        # optional bandwidth wherein the pid output can operate
        # experimental, advised not to use
        pwm_scale_low: -20
        pwm_scale_high: 80

  restore_from_old_state: True
  restore_parameters: True
  restore_integral: True


- platform: multizone_thermostat
  name: sl1
  unique_id: mz_sl1
  sensor: sensor.temp_sl1
  filter_mode: 2
  sensor_out: sensor.openweather_temperature
  room_area: 20
  initial_hvac_mode: "off"
  precision: 0.1
  sensor_stale_duration:
    hours: 12
  passive_switch_check: True
  heat:
    # proportional valve
    # for instance radiator with eurotronic z-wave valve
    entity_id: number.sl4_valve_control

    # specify valve is by default open
    switch_mode: "NO"

    passive_switch_duration:
      days: 60
    passive_switch_opening_time:
      minutes: 4  
    custom_presets:
      night: 15
      holiday: 5

    # control mode for satellite
    proportional_mode:
      # no pwm_duration is speficied for proportional valve
      
      # this valve can be updated more frequently as 
      # it is only not (limited) affecting nesting routine.
      control_interval:
        minutes: 15

      # scale reduced to 99 due to product specific valve limits
      pwm_scale: 99
      pwm_resolution: 50

      # threshold avoids frequency of small valve position adjustments
      pwm_threshold: 2

      # the heat delivered by master varies with the mast pwm signal while 
      # the proportional valve has a certain flow (opening percentage of valve).
      # thus with a low master pwm heating of room is slower than when master pwm = 100
      # this factor scales the thermostat pwm output with the master. 
      # value defines the max scaling limit.
      # see readme for calculation example.
      min_opening_for_propvalve: 4

      # pid controller (optional)
      PID_mode:
        kp: 10
        ki: 0.001
        kd: -100000
        window_open_tempdrop: -3.6

      # weather controller (optional)
      weather_mode:
        ka: 2
        kb: -20

  restore_from_old_state: True
  restore_parameters: True
  restore_integral: True